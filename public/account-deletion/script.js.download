// Language switching functionality
let currentLanguage = 'en';

// EmailJS will be initialized from HTML

function switchLanguage(lang) {
    currentLanguage = lang;
    
    // Update active language button
    document.querySelectorAll('.lang-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    document.getElementById(`lang-${lang}`).classList.add('active');
    
    // Show/hide elements based on language
    document.querySelectorAll('[data-lang]').forEach(element => {
        if (element.getAttribute('data-lang') === lang) {
            element.style.display = '';
        } else {
            element.style.display = 'none';
        }
    });
    
    // Update placeholders
    updatePlaceholders(lang);
    
    // Update select options
    updateSelectOptions(lang);
    
    // Update document language
    document.documentElement.lang = lang;
}

function updatePlaceholders(lang) {
    const contactInput = document.getElementById('contact');
    const otherReasonTextarea = document.getElementById('other-reason');
    
    if (contactInput) {
        contactInput.placeholder = contactInput.getAttribute(`data-placeholder-${lang}`);
    }
    
    if (otherReasonTextarea) {
        otherReasonTextarea.placeholder = otherReasonTextarea.getAttribute(`data-placeholder-${lang}`);
    }
}

function updateSelectOptions(lang) {
    const reasonSelect = document.getElementById('reason');

    // Clear all options first
    reasonSelect.innerHTML = '';

    // Add default option
    const defaultOption = document.createElement('option');
    defaultOption.value = '';
    defaultOption.textContent = lang === 'vi' ? 'Chọn lý do' : 'Select a reason';
    reasonSelect.appendChild(defaultOption);

    // Add reason options
    const reasons = {
        'privacy_concerns': {
            vi: 'Quan ngại về quyền riêng tư',
            en: 'Privacy concerns'
        },
        'not_using': {
            vi: 'Không sử dụng nữa',
            en: 'No longer using'
        },
        'poor_experience': {
            vi: 'Trải nghiệm không tốt',
            en: 'Poor experience'
        },
        'found_alternative': {
            vi: 'Tìm được giải pháp thay thế',
            en: 'Found alternative'
        },
        'other': {
            vi: 'Lý do khác',
            en: 'Other reason'
        }
    };

    Object.keys(reasons).forEach(key => {
        const option = document.createElement('option');
        option.value = key;
        option.textContent = reasons[key][lang];
        reasonSelect.appendChild(option);
    });

    // Reset selection when switching languages
    reasonSelect.value = '';
    hideOtherReasonField();
}

// Form validation
function validateEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
}

function validatePhone(phone) {
    // Vietnamese phone number validation
    const phoneRegex = /^(\+84|84|0)(3|5|7|8|9)[0-9]{8}$/;
    return phoneRegex.test(phone.replace(/\s/g, ''));
}

function validateContact(contact) {
    return validateEmail(contact) || validatePhone(contact);
}

function showError(fieldId, message) {
    const errorElement = document.getElementById(`${fieldId}-error`);
    if (errorElement) {
        errorElement.textContent = message;
        errorElement.style.display = 'block';
    }
}

function hideError(fieldId) {
    const errorElement = document.getElementById(`${fieldId}-error`);
    if (errorElement) {
        errorElement.style.display = 'none';
    }
}

function showOtherReasonField() {
    document.getElementById('other-reason-group').style.display = 'block';
    document.getElementById('other-reason').required = true;
}

function hideOtherReasonField() {
    document.getElementById('other-reason-group').style.display = 'none';
    document.getElementById('other-reason').required = false;
    document.getElementById('other-reason').value = '';
}

// Event listeners
document.addEventListener('DOMContentLoaded', function() {
    // Reason select change handler
    document.getElementById('reason').addEventListener('change', function() {
        if (this.value === 'other') {
            showOtherReasonField();
        } else {
            hideOtherReasonField();
        }
    });
    
    // Contact field validation
    document.getElementById('contact').addEventListener('blur', function() {
        const contact = this.value.trim();
        if (contact && !validateContact(contact)) {
            const errorMsg = currentLanguage === 'vi' 
                ? 'Vui lòng nhập email hoặc số điện thoại hợp lệ'
                : 'Please enter a valid email or phone number';
            showError('contact', errorMsg);
        } else {
            hideError('contact');
        }
    });
    
    // Form submission
    document.getElementById('deleteAccountForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Validate form
        const contact = document.getElementById('contact').value.trim();
        const reason = document.getElementById('reason').value;
        const confirm = document.getElementById('confirm').checked;
        const otherReason = document.getElementById('other-reason').value.trim();
        
        let isValid = true;
        
        // Clear previous errors
        hideError('contact');
        hideError('reason');
        
        // Validate contact
        if (!contact) {
            const errorMsg = currentLanguage === 'vi' 
                ? 'Vui lòng nhập email hoặc số điện thoại'
                : 'Please enter email or phone number';
            showError('contact', errorMsg);
            isValid = false;
        } else if (!validateContact(contact)) {
            const errorMsg = currentLanguage === 'vi' 
                ? 'Vui lòng nhập email hoặc số điện thoại hợp lệ'
                : 'Please enter a valid email or phone number';
            showError('contact', errorMsg);
            isValid = false;
        }
        
        // Validate reason
        if (!reason) {
            const errorMsg = currentLanguage === 'vi' 
                ? 'Vui lòng chọn lý do'
                : 'Please select a reason';
            showError('reason', errorMsg);
            isValid = false;
        }
        
        // Validate other reason if selected
        if (reason === 'other' && !otherReason) {
            const errorMsg = currentLanguage === 'vi' 
                ? 'Vui lòng mô tả lý do cụ thể'
                : 'Please describe your specific reason';
            showError('reason', errorMsg);
            isValid = false;
        }
        
        // Validate confirmation
        if (!confirm) {
            alert(currentLanguage === 'vi' 
                ? 'Vui lòng xác nhận bạn hiểu về việc xóa tài khoản'
                : 'Please confirm you understand about account deletion');
            isValid = false;
        }
        
        if (isValid) {
            submitForm({
                contact: contact,
                reason: reason,
                otherReason: reason === 'other' ? otherReason : '',
                language: currentLanguage
            });
        }
    });
});

function submitForm(formData) {
    // Show loading overlay
    document.getElementById('loading-overlay').style.display = 'flex';

    // Prepare message content
    const reasonText = getReasonText(formData.reason, formData.language);
    const messageContent = formData.language === 'vi'
        ? `Sau 1 thời gian sử dụng thì tôi muốn yêu cầu xóa tài khoản với lý do ${reasonText}${formData.otherReason ? `: ${formData.otherReason}` : ''}`
        : `After using for some time, I want to request account deletion with reason ${reasonText}${formData.otherReason ? `: ${formData.otherReason}` : ''}`;

    // Prepare EmailJS data
    const emailJSData = {
        email: formData.contact,
        message: messageContent
    };

    // Send via EmailJS
    sendViaEmailJS(emailJSData);
}

function showPopup(type, title, message) {
    const popup = document.getElementById('popup-modal');
    const popupIcon = document.getElementById('popup-icon');
    const popupTitle = document.getElementById('popup-title');
    const popupMessage = document.getElementById('popup-message');
    const popupButton = document.getElementById('popup-button');

    // Set content
    popupTitle.textContent = title;
    popupMessage.textContent = message;

    // Set icon and colors based on type
    if (type === 'success') {
        popupIcon.className = 'fas fa-check-circle';
        popupIcon.style.color = '#27ae60';
        popupButton.style.background = '#27ae60';
    } else {
        popupIcon.className = 'fas fa-exclamation-triangle';
        popupIcon.style.color = '#e74c3c';
        popupButton.style.background = '#e74c3c';
    }

    // Show popup
    popup.style.display = 'flex';
}

function closeModal() {
    document.getElementById('success-modal').style.display = 'none';
    document.getElementById('popup-modal').style.display = 'none';

    // Reset form
    document.getElementById('deleteAccountForm').reset();
    hideOtherReasonField();

    // Clear any error messages
    document.querySelectorAll('.error-message').forEach(error => {
        error.style.display = 'none';
    });
}

// Initialize language on page load
document.addEventListener('DOMContentLoaded', function() {
    switchLanguage('en');
});

// Utility function to get reason text for email
function getReasonText(reason, language) {
    const reasons = {
        vi: {
            'privacy_concerns': 'Quan ngại về quyền riêng tư',
            'not_using': 'Không sử dụng nữa',
            'poor_experience': 'Trải nghiệm không tốt',
            'found_alternative': 'Tìm được giải pháp thay thế',
            'other': 'Lý do khác'
        },
        en: {
            'privacy_concerns': 'Privacy concerns',
            'not_using': 'No longer using',
            'poor_experience': 'Poor experience',
            'found_alternative': 'Found alternative',
            'other': 'Other reason'
        }
    };
    
    return reasons[language][reason] || reason;
}

// Function to send data via EmailJS
function sendViaEmailJS(emailData) {
    // Get config from window (set in HTML)
    const config = window.EMAILJS_CONFIG;

    emailjs.send(config.SERVICE_ID, config.TEMPLATE_ID, {
        email: emailData.email,
        message: emailData.message,
        timestamp: new Date().toLocaleString()
    })
    .then(function(response) {
        console.log('EmailJS SUCCESS!', response.status, response.text);

        // Hide loading overlay
        document.getElementById('loading-overlay').style.display = 'none';

        // Show success popup
        showPopup('success',
            currentLanguage === 'vi'
                ? 'Yêu cầu đã được gửi thành công!'
                : 'Request sent successfully!',
            currentLanguage === 'vi'
                ? 'Email đã được gửi đến HATHYO. Chúng tôi sẽ xử lý trong vòng 7-14 ngày làm việc.'
                : 'Email has been sent to HATHYO. We will process within 7-14 business days.'
        );
    })
    .catch(function(error) {
        console.error('EmailJS FAILED...', error);

        // Hide loading overlay
        document.getElementById('loading-overlay').style.display = 'none';

        // Show error popup
        showPopup('error',
            currentLanguage === 'vi' ? 'Gửi yêu cầu thất bại' : 'Failed to send request',
            currentLanguage === 'vi'
                ? 'Có lỗi xảy ra khi gửi email. Vui lòng kiểm tra kết nối internet và thử lại.'
                : 'Error occurred while sending email. Please check your internet connection and try again.'
        );
    });
}
